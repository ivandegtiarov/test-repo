<!-- announcement-bar.liquid -->
<div class="announcement-bar" style="background-color: {{ section.settings.background_color }}; color: {{ section.settings.text_color }};">
  {% if section.settings.show_blocks %}
    <div class="announcement-blocks {% if section.settings.enable_slider %}slider{% endif %}">
      {% for block in section.blocks %}
        <div class="announcement-block">
          {% if block.settings.image %}
            <img src="{{ block.settings.image | img_url: '100x' }}" alt="{{ block.settings.text }}">
          {% endif %}
          <span>{{ block.settings.text }}</span>
        </div>
      {% endfor %}
    </div>
  {% endif %}

  {% if section.settings.show_counter %}
    <div class="countdown-timer">
      <span>Time is ticking</span>
      <div class="timer">
        <span class="days">00</span>:<span class="hours">00</span>:<span class="minutes">00</span>:<span class="seconds">00</span>
      </div>
    </div>
  {% endif %}
</div>

<style>
  .announcement-bar {
    padding: 10px;
    text-align: center;
  }
  .announcement-blocks {
    display: flex;
    justify-content: center;
    gap: 10px;
    border-bottom: 1px solid #ccc;
  }
  .announcement-block {
    display: flex;
    align-items: center;
  }
  .countdown-timer {
    margin-top: 10px;
    font-size: 1.2em;
  }
  .slider {
    overflow: hidden;
    position: relative;
  }
  .slider .announcement-block {
    min-width: 100%;
    transition: transform 0.5s ease;
  }
  @media (max-width: 768px) {
    .announcement-blocks {
      flex-direction: column;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Set the date we're counting down to
    var countDownDate = new Date("Dec 31, 2023 23:59:59").getTime();

    // Update the count down every 1 second
    var x = setInterval(function() {

      // Get today's date and time
      var now = new Date().getTime();

      // Find the distance between now and the count down date
      var distance = countDownDate - now;

      // Time calculations for days, hours, minutes and seconds
      var days = Math.floor(distance / (1000 * 60 * 60 * 24));
      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      var seconds = Math.floor((distance % (1000 * 60)) / 1000);

      // Display the result in the elements with class names
      document.querySelector('.days').innerText = days;
      document.querySelector('.hours').innerText = hours;
      document.querySelector('.minutes').innerText = minutes;
      document.querySelector('.seconds').innerText = seconds;

      // If the count down is over, write some text
      if (distance < 0) {
        clearInterval(x);
        document.querySelector('.timer').innerText = "EXPIRED";
      }
    }, 1000);

    // Slider logic
    if (document.querySelector('.slider')) {
      let index = 0;
      const blocks = document.querySelectorAll('.announcement-block');
      const totalBlocks = blocks.length;

      function showSlide(i) {
        blocks.forEach((block, idx) => {
          block.style.transform = `translateX(${(idx - i) * 100}%)`;
        });
      }

      setInterval(() => {
        index = (index + 1) % totalBlocks;
        showSlide(index);
      }, 3000);
    }
  });
</script>

{% schema %}
{
  "name": "Announcement Bar",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_blocks",
      "label": "Show Blocks",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_counter",
      "label": "Show Countdown Timer",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_slider",
      "label": "Enable Slider",
      "default": false
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#1a1a3d"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#ffffff"
    }
  ],
  "blocks": [
    {
      "type": "block",
      "name": "Block",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Default",
      "category": "Custom"
    }
  ]
}
{% endschema %}